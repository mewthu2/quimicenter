<div class="container-fluid mt-4 text-white">
  <div class="row mb-4 align-items-center">
    <div class="col-md-8">
      <div class="d-flex align-items-center">
        <i class="fas fa-exclamation-triangle fa-2x text-danger me-3"></i>
        <div>
          <h1 class="h3 mb-1 text-white">Itens com Estoque Negativo</h1>
          <p class="text-light mb-0">Itens críticos que precisam de reposição urgente</p>
        </div>
      </div>
    </div>
    <div class="col-md-4 text-end">
      <div class="btn-group">
        <%= link_to export_negative_stock_sales_orders_path, class: "btn btn-outline-danger", id: "export-excel" do %>
          <i class="fas fa-file-excel me-2"></i>Exportar Excel
        <% end %>
        <%= link_to sales_orders_path(show_ignored: !@show_ignored), 
            class: "btn #{ @show_ignored ? 'btn-outline-warning' : 'btn-outline-secondary'}", 
            id: "toggle-ignored-items" do %>
          <i class="fas fa-<%= @show_ignored ? 'eye-slash' : 'eye' %> me-2"></i>
          <%= @show_ignored ? 'Ocultar Excluídos' : 'Mostrar Excluídos' %>
        <% end %>
        <button class="btn btn-outline-info" id="refresh-data">
          <i class="fas fa-sync-alt me-2"></i>Atualizar
        </button>
      </div>
    </div>
  </div>

  <div class="row mb-4">
    <div class="col-md-3 mb-3 mb-md-0">
      <div class="card bg-dark border-danger shadow-sm h-100">
        <div class="card-body">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <h6 class="text-danger mb-1">Estoque Negativo</h6>
              <h2 class="mb-0 display-5 fw-bold text-white"><%= @negative_stock_count %></h2>
              <p class="text-light mb-0 small">Itens críticos para reposição</p>
            </div>
            <div class="rounded-circle bg-danger bg-opacity-10 p-3">
              <i class="fas fa-exclamation-triangle fa-2x text-danger"></i>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-3 mb-3 mb-md-0">
      <div class="card bg-dark border-info shadow-sm h-100">
        <div class="card-body">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <h6 class="text-info mb-1">Itens Selecionados</h6>
              <h2 class="mb-0 display-5 fw-bold text-white" id="checked-items-count"><%= @checked_items_count %></h2>
              <p class="text-light mb-0 small">Marcados para compra</p>
            </div>
            <div class="rounded-circle bg-info bg-opacity-10 p-3">
              <i class="fas fa-check-circle fa-2x text-info"></i>
            </div>
          </div>
          <div class="progress mt-3 bg-dark border border-secondary">
            <!-- Added nil checks to prevent undefined method error -->
            <div class="progress-bar bg-info" role="progressbar" style="width: <%= (@total_items_count&.> 0) ? ((@checked_items_count || 0).to_f / @total_items_count * 100).to_i : 0 %>%" aria-valuenow="<%= @checked_items_count || 0 %>" aria-valuemin="0" aria-valuemax="<%= @total_items_count || 0 %>"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-3 mb-3 mb-md-0">
      <div class="card bg-dark border-warning shadow-sm h-100">
        <div class="card-body">
          <div class="d-flex align-items-center justify-content-between">
            <div>
              <h6 class="text-warning mb-1">Pendentes</h6>
              <!-- Added nil checks for safe arithmetic operations -->
              <h2 class="mb-0 display-5 fw-bold text-white" id="pending-items-count"><%= (@total_items_count || 0) - (@checked_items_count || 0) %></h2>
              <p class="text-light mb-0 small">Aguardando decisão</p>
            </div>
            <div class="rounded-circle bg-warning bg-opacity-10 p-3">
              <i class="fas fa-clock fa-2x text-warning"></i>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="card bg-dark border-secondary shadow-sm h-100">
        <div class="card-body text-center">
          <i class="fas fa-trash fa-3x text-white mb-3"></i>
          <h6 class="card-title text-white-50 text-uppercase fw-bold">Excluídos</h6>
          <h2 class="mb-0 display-5 fw-bold text-white" id="ignored-items-count"><%= @ignored_items_count || 0 %></h2>
        </div>
      </div>
    </div>
  </div>

  <!-- Barra de ações em lote -->
  <div class="card bg-dark border-secondary mb-3" id="bulk-actions-bar" style="display: none;">
    <div class="card-body py-2">
      <div class="d-flex align-items-center justify-content-between">
        <div class="d-flex align-items-center">
          <span class="text-white me-3">
            <span id="selected-count">0</span> item(ns) selecionado(s)
          </span>
          <button class="btn btn-sm btn-outline-danger me-2" id="bulk-remove-btn">
            <i class="fas fa-trash me-1"></i>Excluir Selecionados
          </button>
          <button class="btn btn-sm btn-outline-success me-2" id="bulk-restore-btn" 
        style="<%= @show_ignored ? '' : 'display: none;' %>">
  <i class="fas fa-undo me-1"></i>Restaurar Selecionados
</button>
        </div>
        <button class="btn btn-sm btn-outline-secondary" id="clear-selection">
          <i class="fas fa-times me-1"></i>Limpar Seleção
        </button>
      </div>
    </div>
  </div>

  <div class="card shadow mb-4 border-0 bg-dark border-secondary">
    <div class="card-header py-3 bg-dark border-secondary">
      <div class="d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-danger">
          <i class="fas fa-exclamation-triangle me-2"></i>Itens com Estoque Negativo por Fornecedor
        </h6>
        <div class="d-flex gap-2">
          <button class="btn btn-sm btn-outline-info" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false" aria-controls="filterCollapse">
            <i class="fas fa-filter me-1"></i> Filtros <i class="fas fa-chevron-down ms-1" id="filterIcon"></i>
          </button>
        </div>
      </div>
    </div>
    
    <div class="collapse" id="filterCollapse">
      <div class="card-body bg-dark border-secondary py-3">
        <div class="filter-container bg-dark">
          <div class="row g-3 align-items-end">
            <div class="col-lg-3 col-md-4">
              <div class="filter-group">
                <label for="date-filter" class="form-label text-light small mb-2 fw-semibold">
                  <i class="fas fa-calendar-alt me-2 text-info"></i> Data do Pedido
                </label>
                <input type="date" id="date-filter" class="form-control form-control-sm bg-dark text-white border-secondary focus-ring focus-ring-info">
              </div>
            </div>
            
            <div class="col-lg-3 col-md-4">
              <div class="filter-group">
                <label for="supplier-filter" class="form-label text-light small mb-2 fw-semibold">
                  <i class="fas fa-truck me-2 text-info"></i> Fornecedor
                </label>
                <select id="supplier-filter" class="form-select form-select-sm bg-dark text-white border-secondary focus-ring focus-ring-info">
                  <option value="">Todos os fornecedores</option>
                  <% (@items_by_supplier&.keys || []).each do |supplier| %>
                    <option value="<%= supplier %>"><%= supplier %></option>
                  <% end %>
                </select>
              </div>
            </div>
            
            <div class="col-lg-3 col-md-4">
              <div class="filter-group">
                <label class="form-label text-light small mb-2 fw-semibold">
                  <i class="fas fa-check-square me-2 text-info"></i> Seleção
                </label>
                <div class="form-check form-switch">
                  <input class="form-check-input" type="checkbox" id="select-all-items">
                  <label class="form-check-label text-white small" for="select-all-items">
                    Selecionar todos visíveis
                  </label>
                </div>
              </div>
            </div>
            
            <div class="col-lg-3 col-md-12">
              <div class="d-flex gap-2">
                <button class="btn btn-outline-secondary btn-sm flex-fill" id="clear-filters">
                  <i class="fas fa-times me-1"></i> Limpar Filtros
                </button>
                <button class="btn btn-outline-info btn-sm" id="filter-status" style="min-width: 120px;">
                  <i class="fas fa-info-circle me-1"></i> <span id="filter-count">Todos</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="card-body p-0">
      <!-- Corrigindo condição e estrutura HTML da tabela -->
      <% if @items_by_supplier.nil? || @items_by_supplier.empty? %>
        <div class="text-center py-5">
          <i class="fas fa-check-circle fa-4x text-success mb-3"></i>
          <h5 class="text-white">Nenhum item com estoque negativo!</h5>
          <p class="text-white-50">Todos os itens estão com estoque adequado.</p>
        </div>
      <% else %>
        <div class="accordion" id="suppliersAccordion">
          <% (@items_by_supplier || {}).each do |supplier, items| %>
            <%
              items_count = items.size
              total_value = items.sum { |item| (item.valor_unitario || 0) * (item.quantidade || 0) }
              checked_count = items.count { |item| item.checked_order }
              pending_count = items_count - checked_count
              
              # Busca itens excluídos do mesmo fornecedor
              ignored_items = (@ignored_items_by_supplier&.dig(supplier) || [])
            %>
            <div class="supplier-group border-bottom border-secondary" data-supplier="<%= supplier %>">
              <div class="supplier-header bg-secondary p-3 d-flex justify-content-between align-items-center">
                <div>
                  <h5 class="mb-0 text-white">
                    <i class="fas fa-building me-2"></i>
                    <%= supplier.present? ? supplier : 'Fornecedor não informado' %>
                  </h5>
                  <small class="text-white-50"><%= items.size %> itens</small>
                </div>
                <button class="btn btn-outline-light btn-sm toggle-supplier" type="button">
                  <i class="fas fa-chevron-down"></i>
                </button>
              </div>
              <div class="supplier-items">
                <!-- Adicionando estrutura de tabela apropriada -->
                <div class="table-responsive">
                  <table class="table table-dark table-hover mb-0">
                    <thead class="table-secondary">
                      <tr>
                        <th width="40"><input type="checkbox" class="form-check-input supplier-select-all" data-supplier="<%= supplier %>"></th>
                        <th>Código</th>
                        <th>Data</th>
                        <th>Descrição</th>
                        <th class="text-end">Qtd</th>
                        <th class="text-end">Estoque</th>
                        <th class="text-end">Valor Unit.</th>
                        <th class="text-end">Valor Total</th>
                        <th class="text-center">Qtd. Pedido</th>
                        <th class="text-center">Ações</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% items.each do |item| %>
                        <% is_ignored = ignored_items.include?(item.id) %>
                        <% estoque = item.produto_estoque || 0 %>
                        <tr class="bg-danger text-white stock-negative <%= is_ignored ? 'item-ignored' : (item.checked_order ? 'selection-checked' : 'selection-pending') %> item-row" 
                            data-product-code="<%= item.produto_codigo %>" 
                            data-product-desc="<%= item.produto_descricao %>"
                            data-stock-status="negative"
                            data-selection-status="<%= is_ignored ? 'ignored' : (item.checked_order ? 'checked' : 'pending') %>"
                            data-item-date="<%= item.sale_order&.data&.strftime('%Y-%m-%d') %>"
                            data-item-id="<%= item.id %>"
                            data-ignored="<%= is_ignored %>"
                            data-checked-order="<%= item.checked_order ? 'true' : 'false' %>">
                          <td class="ps-3">
                            <!-- Inicializar checkbox baseado no estado checked_order -->
                            <input type="checkbox" class="form-check-input item-select" data-item-id="<%= item.id %>" <%= item.checked_order ? 'checked' : '' %>>
                          </td>
                          <td>
                            <% if is_ignored %>
                              <i class="fas fa-trash me-1 text-secondary" title="Item excluído"></i>
                            <% else %>
                              <i class="fas fa-exclamation-triangle me-1" title="Estoque negativo"></i>
                            <% end %>
                            <code class="bg-secondary text-white"><%= item.produto_codigo %></code>
                          </td>
                          <td><%= item.sale_order&.data&.strftime('%d/%m/%Y') %></td>
                          <td>
                            <div class="d-flex flex-column">
                              <span><%= item.produto_descricao %></span>
                              <% if item.descricao_detalhada.present? %>
                                <small class="text-light"><%= truncate(item.descricao_detalhada, length: 50) %></small>
                              <% end %>
                            </div>
                          </td>
                          <td class="text-end fw-bold"><%= number_with_precision(item.quantidade, precision: 2) %></td>
                          <td class="text-end fw-bold text-warning"><%= estoque %></td>
                          <td class="text-end"><%= number_to_currency(item.valor_unitario, unit: "R$ ") %></td>
                          <td class="text-end fw-bold"><%= number_to_currency(item.valor_total, unit: "R$ ") %></td>
                          <td class="text-center">
                            <% if item.sale_order_item_supply.present? && !is_ignored %>
                              <div class="input-group input-group-sm">
                                <%= text_field_tag "quantity_order[#{item.id}]", 
                                    item.quantity_order || estoque.abs, 
                                    class: "form-control form-control-sm quantity-order-input bg-dark text-white border-secondary", 
                                    placeholder: "Qtd.", 
                                    data: { item_id: item.id },
                                    disabled: !item.checked_order %>
                              </div>
                            <% end %>
                          </td>
                          <td class="text-center">
                            <div class="d-flex justify-content-center gap-1">
                                  <div class="form-check form-switch d-inline-block me-2">
                                    <input class="form-check-input checked-order-toggle" type="checkbox" 
                                           name="checked_order[<%= item.id %>]" 
                                           id="checked_order[<%= item.id %>]" 
                                           value="1" 
                                           <%= item.checked_order ? 'checked' : '' %>
                                           data-item-id="<%= item.id %>">
                                    <label class="form-check-label ms-1 text-white small" for="checked_order[<%= item.id %>]">Incluir</label>
                                  </div>
                                  
                                  <% if item.sale_order_item_supply.present? %>
                                    <% if item.checked_order %>
                                      <button type="button" class="btn btn-sm btn-outline-danger save-item-btn" data-item-id="<%= item.id %>" data-action="remove">
                                        <i class="fas fa-times"></i>
                                      </button>
                                    <% else %>
                                      <button type="button" class="btn btn-sm btn-outline-success save-item-btn" data-item-id="<%= item.id %>" data-action="save">
                                        <i class="fas fa-save"></i>
                                      </button>
                                    <% end %>
                                  <% end %>
                              <% if is_ignored %>
                                <button type="button" class="btn btn-sm btn-outline-success restore-item-btn" 
                                        data-item-id="<%= item.id %>"
                                        title="Restaurar item">
                                  <i class="fas fa-undo"></i>
                                </button>
                              <% else %>
                                <% if item.sale_order_item_supply.present? %>
                                  
                                  
                                <% else %>
                                  <button type="button" class="btn btn-sm btn-outline-warning add-supplier-btn"
                                          data-bs-toggle="modal" data-bs-target="#supplierModal"
                                          data-item-id="<%= item.id %>"
                                          data-product-id="<%= item.produto_id %>">
                                    <i class="fas fa-plus me-1"></i>Fornecedor
                                  </button>
                                <% end %>
                                <button type="button" class="btn btn-sm btn-outline-danger remove-item-btn" 
                                        data-item-id="<%= item.id %>"
                                        title="Remover item da listagem">
                                  <i class="fas fa-times"></i>
                                </button>
                              <% end %>
                            </div>
                          </td>
                        </tr>
                      <% end %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<footer class="fixed-footer">
  <div class="footer-nav-container">
    <div class="footer-nav-section" id="negative-stock-nav">
      <div class="d-flex align-items-center">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <span id="negative-stock-count" class="fw-bold"><%= @negative_stock_count %></span>
        <span class="d-none d-md-inline ms-1">críticos</span>
      </div>
      <div class="footer-nav-controls">
        <button type="button" id="prev-negative-stock" class="btn btn-sm me-2" disabled>
          <i class="fas fa-chevron-left"></i>
        </button>
        <span class="nav-counter">
          <span id="current-negative-stock">0</span>/<span id="total-negative-stock"><%= @negative_stock_count || 0 %></span>
        </span>
        <button type="button" id="next-negative-stock" class="btn btn-sm ms-2" <%= (@negative_stock_count || 0) > 0 ? '' : 'disabled' %>>
          <i class="fas fa-chevron-right"></i>
        </button>
      </div>
    </div>
  </div>
</footer>

<div class="pb-5 mb-5"></div>

<!-- Adicionando modal para buscar fornecedor no Bling -->
<div class="modal fade" id="supplierModal" tabindex="-1" aria-labelledby="supplierModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content bg-dark text-white">
      <div class="modal-header border-secondary">
        <h5 class="modal-title" id="supplierModalLabel">
          <i class="fas fa-search me-2"></i>Buscar Fornecedor no Bling
        </h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="supplier-form">
          <input type="hidden" id="modal-item-id" name="item_id">
          
          <div class="mb-3">
            <label for="supplier-search" class="form-label">ID do Fornecedor no Bling</label>
            <div class="input-group">
              <input type="text" class="form-control bg-dark text-white border-secondary" id="supplier-search" placeholder="Digite o ID do fornecedor">
              <button class="btn btn-outline-info" type="button" id="search-supplier-btn">
                <i class="fas fa-search me-1"></i>Buscar
              </button>
            </div>
            <small class="form-text text-muted">Digite o ID numérico do fornecedor no sistema Bling</small>
          </div>
          
          <div id="supplier-info" class="d-none">
            <div class="alert alert-info">
              <h6><i class="fas fa-info-circle me-2"></i>Informações do Fornecedor</h6>
              <div id="supplier-details"></div>
            </div>
            
            <input type="hidden" id="supplier-id" name="supplier_id">
            <input type="hidden" id="supplier-name" name="supplier_name">
            
            <div class="mb-3">
              <label for="supplier-type" class="form-label">Tipo de Fornecedor</label>
              <select class="form-select bg-dark text-white border-secondary" id="supplier-type" name="supplier_type">
                <option value="Pessoa Jurídica">Pessoa Jurídica</option>
                <option value="Pessoa Física">Pessoa Física</option>
              </select>
            </div>
            
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="default-supplier" name="default">
              <label class="form-check-label" for="default-supplier">
                Definir como fornecedor padrão para este produto
              </label>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer border-secondary">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
        <button type="button" class="btn btn-primary" id="save-supplier-btn" disabled>
          <i class="fas fa-save me-1"></i>Salvar Fornecedor
        </button>
      </div>
    </div>
  </div>
</div>

<%= javascript_tag do %>
$(document).ready(function() {
  let negativeStockRows = [];
  let currentNegativeStockIndex = -1;
  const showingIgnored = <%= @show_ignored ? 'true' : 'false' %>;

  function updateRealSelectionCount() {
    const checkedOrderItems = $('.item-row:not(.item-ignored) .checked-order-toggle:checked').length;
    const selectedItems = $('.item-row:visible .item-select:checked').length;
    const totalItems = $('.item-row:not(.item-ignored)').length;
    
    console.log('[v0] Contadores - Checked Order:', checkedOrderItems, 'Selected:', selectedItems, 'Total:', totalItems);
    
    // Atualiza o contador de itens selecionados no card
    $('#checked-items-count').text(checkedOrderItems);
    
    // Atualiza o contador de itens pendentes
    $('#pending-items-count').text(totalItems - checkedOrderItems);
    
    // Atualiza a barra de progresso
    const progressPercentage = totalItems > 0 ? Math.round((checkedOrderItems / totalItems) * 100) : 0;
    $('.progress-bar').css('width', progressPercentage + '%').attr('aria-valuenow', checkedOrderItems);
    
    // Atualiza o contador da barra de ações em lote
    $('#selected-count').text(selectedItems);
    
    if (selectedItems > 0) {
      $('#bulk-actions-bar').show();
    } else {
      $('#bulk-actions-bar').hide();
    }
  }

  function syncSelectionCheckboxes() {
    console.log('[v0] Sincronizando checkboxes...');
    
    $('.item-row').each(function() {
      const row = $(this);
      const itemId = row.data('item-id');
      const isCheckedOrder = row.data('checked-order') === 'true' || row.data('checked-order') === true;
      const selectCheckbox = row.find('.item-select');
      const checkedOrderToggle = row.find('.checked-order-toggle');
      
      console.log('[v0] Item', itemId, '- Checked Order:', isCheckedOrder, 'Toggle exists:', checkedOrderToggle.length > 0);
      
      // Sincroniza o checkbox de seleção múltipla com o estado checked_order
      selectCheckbox.prop('checked', isCheckedOrder);
      
      // Garante que o toggle também esteja correto
      if (checkedOrderToggle.length > 0) {
        checkedOrderToggle.prop('checked', isCheckedOrder);
      }
      
      // Atualiza as classes visuais
      if (isCheckedOrder) {
        row.removeClass('selection-pending').addClass('selection-checked');
      } else {
        row.removeClass('selection-checked').addClass('selection-pending');
      }
      
      // Habilita/desabilita o input de quantidade
      const quantityInput = row.find('.quantity-order-input');
      quantityInput.prop('disabled', !isCheckedOrder);
    });
    
    updateRealSelectionCount();
    updateSupplierSelectAll();
  }

  function initStockNavigation() {
    negativeStockRows = $('tr.stock-negative:not(.item-ignored):visible').toArray();
    const negativeStockCount = negativeStockRows.length;
    
    if (negativeStockCount > 0) {
      document.getElementById('next-negative-stock').removeAttribute('disabled');
      currentNegativeStockIndex = 0;
      document.getElementById('current-negative-stock').textContent = '1';
    } else {
      document.getElementById('prev-negative-stock').setAttribute('disabled', 'disabled');
      document.getElementById('next-negative-stock').setAttribute('disabled', 'disabled');
      document.getElementById('current-negative-stock').textContent = '0';
    }
    
    document.getElementById('total-negative-stock').textContent = negativeStockCount.toString();
  }

  function expandAccordionForRow(row) {
    const accordionCollapse = $(row).closest('.accordion-collapse');
    if (accordionCollapse.length && !accordionCollapse.hasClass('show')) {
      const accordionId = accordionCollapse.attr('id');
      const accordionButton = $(`[data-bs-target="#${accordionId}"]`);
      if (accordionButton.length) {
        accordionButton.removeClass('collapsed');
        accordionCollapse.addClass('show');
      }
    }
  }

  function highlightAndScrollToRow(row) {
    document.querySelectorAll('tr.highlighted-row-danger').forEach(r => {
      r.classList.remove('highlighted-row-danger', 'flash-animation');
    });
    
    row.classList.add('highlighted-row-danger');
    row.scrollIntoView({ behavior: 'smooth', block: 'center' });
    
    setTimeout(() => {
      row.classList.add('flash-animation');
    }, 300);
  }

  function updateSelectionCount() {
    updateRealSelectionCount();
  }

  function updateSupplierSelectAll() {
    $('.supplier-group').each(function() {
      const supplierGroup = $(this);
      const visibleItems = supplierGroup.find('.item-row:visible .item-select');
      const checkedItems = supplierGroup.find('.item-row:visible .item-select:checked');
      const selectAllCheckbox = supplierGroup.find('.supplier-select-all');
      
      if (visibleItems.length === 0) {
        selectAllCheckbox.prop('indeterminate', false).prop('checked', false);
      } else if (checkedItems.length === visibleItems.length) {
        selectAllCheckbox.prop('indeterminate', false).prop('checked', true);
      } else if (checkedItems.length > 0) {
        selectAllCheckbox.prop('indeterminate', true).prop('checked', false);
      } else {
        selectAllCheckbox.prop('indeterminate', false).prop('checked', false);
      }
    });
  }

  function showAlert(message, type) {
    const alertClass = {
      'success': 'alert-success',
      'error': 'alert-danger', 
      'warning': 'alert-warning',
      'info': 'alert-info'
    }[type] || 'alert-info';

    const alertHtml = `
      <div class="alert ${alertClass} alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
        <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    `;

    $('body').append(alertHtml);

    setTimeout(function() {
      $('.alert').fadeOut();
    }, 5000);
  }

  // Navegação entre itens
  $('#next-negative-stock').on('click', function() {
    if (negativeStockRows.length === 0) return;
    
    currentNegativeStockIndex = (currentNegativeStockIndex + 1) % negativeStockRows.length;
    $('#current-negative-stock').text(currentNegativeStockIndex + 1);
    $('#prev-negative-stock').prop('disabled', false);
    
    const currentRow = negativeStockRows[currentNegativeStockIndex];
    expandAccordionForRow(currentRow);
    highlightAndScrollToRow(currentRow);
  });

  $('#prev-negative-stock').on('click', function() {
    if (negativeStockRows.length === 0) return;
    
    currentNegativeStockIndex = (currentNegativeStockIndex - 1 + negativeStockRows.length) % negativeStockRows.length;
    $('#current-negative-stock').text(currentNegativeStockIndex + 1);
    
    const currentRow = negativeStockRows[currentNegativeStockIndex];
    expandAccordionForRow(currentRow);
    highlightAndScrollToRow(currentRow);
  });

  $(document).on('change', '.item-select', function() {
    const itemId = $(this).data('item-id');
    const isChecked = $(this).is(':checked');
    const row = $(this).closest('.item-row');
    const checkedOrderToggle = row.find('.checked-order-toggle');
    
    console.log('[v0] Item selecionado:', itemId, 'Checked:', isChecked);
    
    // Sincroniza com o toggle checked_order se existir
    if (checkedOrderToggle.length > 0) {
      checkedOrderToggle.prop('checked', isChecked);
      
      // Atualiza o data attribute
      row.attr('data-checked-order', isChecked ? 'true' : 'false');
      
      // Atualiza as classes visuais
      if (isChecked) {
        row.removeClass('selection-pending').addClass('selection-checked');
      } else {
        row.removeClass('selection-checked').addClass('selection-pending');
      }
      
      // Habilita/desabilita o input de quantidade
      const quantityInput = row.find('.quantity-order-input');
      quantityInput.prop('disabled', !isChecked);
      
      // Mostra/esconde o botão de salvar
      toggleSaveButton(itemId);
    }
    
    updateRealSelectionCount();
    updateSupplierSelectAll();
  });

  $(document).on('change', '.supplier-select-all', function() {
    const supplier = $(this).data('supplier');
    const isChecked = $(this).is(':checked');
    const supplierGroup = $(this).closest('.supplier-group');
    
    console.log('Supplier select all:', supplier, 'Checked:', isChecked);
    
    supplierGroup.find('.item-row:visible .item-select').each(function() {
      $(this).prop('checked', isChecked).trigger('change');
    });
  });

  $('#select-all-items').on('change', function() {
    const isChecked = $(this).is(':checked');
    console.log('Select all items:', isChecked);
    
    $('.item-row:visible .item-select').each(function() {
      $(this).prop('checked', isChecked).trigger('change');
    });
    $('.supplier-select-all').prop('checked', isChecked);
  });

  $('#clear-selection').on('click', function() {
    $('.item-select, .supplier-select-all, #select-all-items').prop('checked', false);
    $('.item-select').trigger('change');
  });

  // CORREÇÃO: Event listener para botão de adicionar fornecedor
  $(document).on('click', '.add-supplier-btn', function() {
    const itemId = $(this).data('item-id');
    
    console.log('Abrindo modal para item:', itemId);
    
    // Preenche os campos hidden do modal
    $('#modal-item-id').val(itemId);
    
    // Limpa os campos do formulário
    $('#supplier-search').val('');
    $('#supplier-id').val('');
    $('#supplier-name').val('');
    $('#supplier-type').val('Pessoa Jurídica');
    $('#default-supplier').prop('checked', false);
    $('#supplier-info').addClass('d-none');
    $('#save-supplier-btn').prop('disabled', true);
  });

  // CORREÇÃO: Event listener para salvar fornecedor
  $('#save-supplier-btn').on('click', function() {
    const itemId = $('#modal-item-id').val();
    const supplierId = $('#supplier-id').val();
    const supplierName = $('#supplier-name').val();
    const supplierType = $('#supplier-type').val();
    const isDefault = $('#default-supplier').is(':checked');
    
    if (!supplierId || !supplierName) {
      showAlert('Por favor, busque e selecione um fornecedor', 'warning');
      return;
    }
    
    const button = $(this);
    button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Salvando...');
    
    $.ajax({
      url: '/sales_orders/add_supplier_to_item',
      method: 'POST',
      data: {
        sale_order_item_id: itemId,
        supplier_id: supplierId,
        supplier_name: supplierName,
        supplier_type: supplierType,
        default: isDefault
      },
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(response) {
        if (response.success) {
          showAlert(response.message || 'Fornecedor adicionado com sucesso!', 'success');
          $('#supplierModal').modal('hide');
          
          // Recarrega a página após 1 segundo
          setTimeout(function() {
            window.location.reload();
          }, 1000);
        } else {
          showAlert(response.message || 'Erro ao adicionar fornecedor', 'error');
        }
        button.prop('disabled', false).html('<i class="fas fa-save me-1"></i>Salvar Fornecedor');
      },
      error: function(xhr) {
        const response = xhr.responseJSON;
        const message = response ? response.message : 'Erro ao adicionar fornecedor';
        showAlert(message, 'error');
        button.prop('disabled', false).html('<i class="fas fa-save me-1"></i>Salvar Fornecedor');
        $('#save-supplier-btn').prop('disabled', true);
      }
    });
  });

  // CORREÇÃO: Event listener para botão de remover item
  $(document).on('click', '.remove-item-btn', function() {
    const itemId = $(this).data('item-id');
    
    console.log('Removendo item:', itemId);
    
    if (confirm('Tem certeza que deseja remover este item da listagem?')) {
      const button = $(this);
      button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
      
      $.ajax({
        url: '/sales_orders/ignore_item', // Ajuste a URL conforme sua rota
        method: 'PATCH',
        data: {
          item_id: itemId
        },
        headers: {
          'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
        },
        success: function(response) {
          if (response.success) {
            showAlert(response.message || 'Item removido com sucesso!', 'success');
            
            // Recarrega a página após 1 segundo
            setTimeout(function() {
              window.location.reload();
            }, 1000);
          } else {
            showAlert(response.message || 'Erro ao remover item', 'error');
            button.prop('disabled', false).html('<i class="fas fa-times"></i>');
          }
        },
        error: function(xhr) {
          const response = xhr.responseJSON;
          const message = response ? response.message : 'Erro ao remover item';
          showAlert(message, 'error');
          button.prop('disabled', false).html('<i class="fas fa-times"></i>');
        }
      });
    }
  });

  // CORREÇÃO: Event listener para botão de restaurar item
  $(document).on('click', '.restore-item-btn', function() {
    const itemId = $(this).data('item-id');
    
    console.log('Restaurando item:', itemId);
    
    if (confirm('Tem certeza que deseja restaurar este item?')) {
      const button = $(this);
      button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i>');
      
      $.ajax({
        url: '/sales_orders/restore_item', // Ajuste a URL conforme sua rota
        method: 'PATCH',
        data: {
          item_id: itemId
        },
        headers: {
          'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
        },
        success: function(response) {
          if (response.success) {
            showAlert(response.message || 'Item restaurado com sucesso!', 'success');
            
            // Recarrega a página após 1 segundo para mostrar o resultado
            setTimeout(function() {
              window.location.reload();
            }, 1000);
          } else {
            showAlert(response.message || 'Erro ao restaurar item', 'error');
            button.prop('disabled', false).html('<i class="fas fa-undo"></i>');
          }
        },
        error: function(xhr) {
          const response = xhr.responseJSON;
          const message = response ? response.message : 'Erro ao restaurar item';
          showAlert(message, 'error');
          button.prop('disabled', false).html('<i class="fas fa-undo"></i>');
        }
      });
    }
  });

  // Exclusão em lote
  $('#bulk-remove-btn').on('click', function() {
    const selectedItems = $('.item-select:checked').map(function() {
      return $(this).data('item-id');
    }).get();
    
    console.log('Selected items for removal:', selectedItems);
    
    if (selectedItems.length === 0) {
      showAlert('Nenhum item selecionado', 'warning');
      return;
    }
    
    if (confirm(`Tem certeza que deseja remover ${selectedItems.length} item(ns) da listagem?`)) {
      const button = $(this);
      button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Removendo...');
      
      $.ajax({
        url: '/sales_orders/bulk_ignore_items',
        method: 'PATCH',
        data: {
          item_ids: selectedItems
        },
        headers: {
          'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
        },
        success: function(response) {
          if (response.success) {
            showAlert(response.message, 'success');
            
            // Recarrega a página após 1 segundo para mostrar o resultado
            setTimeout(function() {
              window.location.reload();
            }, 1000);
          } else {
            showAlert(response.message, 'error');
            button.prop('disabled', false).html('<i class="fas fa-trash me-1"></i>Excluir Selecionados');
          }
        },
        error: function(xhr) {
          const response = xhr.responseJSON;
          const message = response ? response.message : 'Erro ao remover itens';
          showAlert(message, 'error');
          button.prop('disabled', false).html('<i class="fas fa-trash me-1"></i>Excluir Selecionados');
        }
      });
    }
  });

  // Restauração em lote
  $('#bulk-restore-btn').on('click', function() {
    const selectedItems = $('.item-ignored .item-select:checked').map(function() {
      return $(this).data('item-id');
    }).get();
    
    if (selectedItems.length === 0) {
      showAlert('Nenhum item excluído selecionado', 'warning');
      return;
    }
    
    if (confirm(`Tem certeza que deseja restaurar ${selectedItems.length} item(ns)?`)) {
      const button = $(this);
      button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Restaurando...');
      
      $.ajax({
        url: '/sales_orders/bulk_restore_items',
        method: 'PATCH',
        data: {
          item_ids: selectedItems
        },
        headers: {
          'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
        },
        success: function(response) {
          if (response.success) {
            showAlert(response.message, 'success');
            
            // Recarrega a página após 1 segundo para mostrar o resultado
            setTimeout(function() {
              window.location.reload();
            }, 1000);
          } else {
            showAlert(response.message, 'error');
            button.prop('disabled', false).html('<i class="fas fa-undo me-1"></i>Restaurar Selecionados');
          }
        },
        error: function(xhr) {
          const response = xhr.responseJSON;
          const message = response ? response.message : 'Erro ao restaurar itens';
          showAlert(message, 'error');
          button.prop('disabled', false).html('<i class="fas fa-undo me-1"></i>Restaurar Selecionados');
        }
      });
    }
  });

  $('#refresh-data').on('click', function() {
    const btn = $(this);
    btn.html('<i class="fas fa-spinner fa-spin me-2"></i>Atualizando...').prop('disabled', true);
    
    setTimeout(() => {
      location.reload();
    }, 1000);
  });

  // Outros eventos...
  $(document).on('change', '.checked-order-toggle', function() {
    const itemId = $(this).data('item-id');
    const isChecked = $(this).is(':checked');
    const quantityInput = $(`input[name="quantity_order[${itemId}]"]`);
    
    quantityInput.prop('disabled', !isChecked);
    toggleSaveButton(itemId);
  });

  $(document).on('click', '.save-item-btn', function() {
    const itemId = $(this).data('item-id');
    const action = $(this).data('action');
    const newCheckedState = action === 'save';
    
    if (newCheckedState) {
      const quantityValue = parseFloat($(`input[name="quantity_order[${itemId}]"]`).val());
      if (isNaN(quantityValue) || quantityValue <= 0) {
        showAlert('Por favor, defina uma quantidade válida', 'warning');
        return;
      }
    }
    
    const button = $(this);
    const quantityValue = parseFloat($(`input[name="quantity_order[${itemId}]"]`).val()) || 0;

    $.ajax({
      url: `/sale_order_items/${itemId}/update_item`,
      method: 'PATCH',
      data: {
        sale_order_item: {
          checked_order: newCheckedState,
          quantity_order: quantityValue
        }
      },
      beforeSend: function(xhr) {
        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
        button.prop('disabled', true);
        button.find('i').removeClass('fa-save fa-times').addClass('fa-spinner fa-spin');
      },
      success: function(response) {
        $(`input[name="checked_order[${itemId}]"]`).prop('checked', newCheckedState);
        $(`input[name="quantity_order[${itemId}]"]`).prop('disabled', !newCheckedState);
        
        if (newCheckedState) {
          // Change to remove button
          button.removeClass('btn-outline-success').addClass('btn-outline-danger');
          button.find('i').removeClass('fa-spinner fa-spin fa-save').addClass('fa-times');
          button.attr('data-action', 'remove');
        } else {
          // Change to save button
          button.removeClass('btn-outline-danger').addClass('btn-outline-success');
          button.find('i').removeClass('fa-spinner fa-spin fa-times').addClass('fa-save');
          button.attr('data-action', 'save');
        }
        
        button.prop('disabled', false);
        updateRealSelectionCount();
        syncSelectionCheckboxes();
        
        showAlert('success', newCheckedState ? 'Item salvo com sucesso!' : 'Item removido com sucesso!');
      },
      error: function() {
        showAlert('danger', 'Erro ao salvar item. Tente novamente.');
      },
      complete: function() {
        button.prop('disabled', false);
      }
    });
  });

  // Outros eventos...
  $(document).on('change', '.checked-order-toggle', function() {
    const itemId = $(this).data('item-id');
    const isChecked = $(this).is(':checked');
    const quantityInput = $(`input[name="quantity_order[${itemId}]"]`);
    
    quantityInput.prop('disabled', !isChecked);
    toggleSaveButton(itemId);
  });

  function toggleSaveButton(itemId) {
    updateRealSelectionCount();
    syncSelectionCheckboxes();
  }

  $('#supplier-filter').on('change', function() {
    const selectedSupplier = $(this).val();
    filterItemsBySupplier(selectedSupplier);
  });

  // Filtro por data
  $('#date-filter').on('change', function() {
    const selectedDate = $(this).val();
    filterItemsByDate(selectedDate);
  });

  $('#clear-filters').on('click', function() {
    $('#date-filter').val('');
    $('#supplier-filter').val('');
    $('#select-all-items').prop('checked', false);
    $('.item-row, .supplier-group').show();
    $('.item-select, .supplier-select-all').prop('checked', false);
    updateSelectionCount();
    updateFilterStatus();
    initStockNavigation();
  });

  function filterItemsByDate(selectedDate) {
    $('.item-row, .supplier-group').show();
    
    if (!selectedDate) {
      initStockNavigation();
      updateFilterStatus();
      return;
    }

    let visibleItemsCount = 0;
    
    $('.item-row').each(function() {
      const itemDate = $(this).data('item-date');
      if (itemDate === selectedDate) {
        $(this).show();
        visibleItemsCount++;
      } else {
        $(this).hide();
      }
    });

    // Esconde grupos de fornecedores sem itens visíveis
    $('.supplier-group').each(function() {
      const visibleItems = $(this).find('.item-row:visible').length;
      if (visibleItems > 0) {
        $(this).show();
      } else {
        $(this).hide();
      }
    });
    
    initStockNavigation();
    updateFilterStatus();
  }

  function filterItemsBySupplier(selectedSupplier) {
    $('.supplier-group, .item-row').show();
    
    if (!selectedSupplier) {
      initStockNavigation();
      updateFilterStatus();
      return;
    }

    $('.supplier-group').each(function() {
      const supplierName = $(this).find('.supplier-header h5').text().trim();
      if (supplierName === selectedSupplier) {
        $(this).show();
      } else {
        $(this).hide();
      }
    });
    
    initStockNavigation();
    updateFilterStatus();
  }

  function updateFilterStatus() {
    const visibleItems = $('.item-row:visible').length;
    const totalItems = $('.item-row').length;
    const activeFilters = [];
    
    if ($('#date-filter').val()) activeFilters.push('Data');
    if ($('#supplier-filter').val()) activeFilters.push('Fornecedor');
    
    if (activeFilters.length > 0) {
      $('#filter-count').text(`${visibleItems}/${totalItems} itens`);
      $('#filter-status').removeClass('btn-outline-info').addClass('btn-outline-warning');
    } else {
      $('#filter-count').text('Todos');
      $('#filter-status').removeClass('btn-outline-warning').addClass('btn-outline-info');
    }
  }

  $('#search-supplier-btn').on('click', function() {
    const supplierId = $('#supplier-search').val();
    
    if (!supplierId) {
      showAlert('Por favor, digite o ID do fornecedor', 'warning');
      return;
    }
    
    const button = $(this);
    button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Buscando...');
    
    $.ajax({
      url: '/sales_orders/search_supplier_bling',
      method: 'GET',
      data: { supplier_id: supplierId },
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      success: function(response) {
        if (response.success && response.supplier) {
          const supplier = response.supplier;
          
          $('#supplier-id').val(supplier.id);
          $('#supplier-name').val(supplier.nome);
          $('#supplier-type').val(supplier.tipo || 'Pessoa Jurídica');
          
          $('#supplier-info').removeClass('d-none');
          $('#supplier-details').html(`
            <strong>Nome:</strong> ${supplier.nome}<br>
            <strong>Tipo:</strong> ${supplier.tipo || 'Pessoa Jurídica'}<br>
            <strong>ID Bling:</strong> ${supplier.id}
          `);
          
          $('#save-supplier-btn').prop('disabled', false);
          showAlert('Fornecedor encontrado com sucesso!', 'success');
        } else {
          showAlert(response.message || 'Fornecedor não encontrado', 'error');
          $('#save-supplier-btn').prop('disabled', true);
        }
        
        button.prop('disabled', false).html('<i class="fas fa-search me-1"></i>Buscar');
      },
      error: function(xhr) {
        const response = xhr.responseJSON;
        const message = response ? response.message : 'Erro ao buscar fornecedor';
        showAlert(message, 'error');
        button.prop('disabled', false).html('<i class="fas fa-search me-1"></i>Buscar');
        $('#save-supplier-btn').prop('disabled', true);
      }
    });
  });

  $(document).on('click', '.toggle-supplier', function() {
    const button = $(this);
    const supplierGroup = button.closest('.supplier-group');
    const supplierItems = supplierGroup.find('.supplier-items');
    const icon = button.find('i');
    
    // Toggle da visibilidade dos itens
    supplierItems.slideToggle(300, function() {
      // Atualiza o ícone após a animação
      if (supplierItems.is(':visible')) {
        icon.removeClass('fa-chevron-down').addClass('fa-chevron-up');
      } else {
        icon.removeClass('fa-chevron-up').addClass('fa-chevron-down');
      }
    });
  });

  $(document).on('change', '.checked-order-toggle', function() {
    const itemId = $(this).data('item-id');
    const isChecked = $(this).is(':checked');
    const row = $(this).closest('.item-row');
    const itemSelectCheckbox = row.find('.item-select');
    
    console.log('[v0] Checked order toggle:', itemId, 'Checked:', isChecked);
    
    // Sincroniza com o checkbox de seleção múltipla
    itemSelectCheckbox.prop('checked', isChecked);
    
    // Atualiza o data attribute
    row.attr('data-checked-order', isChecked ? 'true' : 'false');
    
    // Atualiza as classes visuais
    if (isChecked) {
      row.removeClass('selection-pending').addClass('selection-checked');
    } else {
      row.removeClass('selection-checked').addClass('selection-pending');
    }
    
    const quantityInput = $(`input[name="quantity_order[${itemId}]"]`);
    quantityInput.prop('disabled', !isChecked);
    
    toggleSaveButton(itemId);
    updateRealSelectionCount();
    updateSupplierSelectAll();
  });

  function initializeSelectionStates() {
    console.log('[v0] Inicializando estados de seleção...');
    
    setTimeout(function() {
      // Sincroniza todos os checkboxes com o estado checked_order
      syncSelectionCheckboxes();
      
      // Inicializa a navegação
      initStockNavigation();
      
      // Debug: Verificar se os elementos existem
      console.log('[v0] Bulk actions bar:', $('#bulk-actions-bar').length);
      console.log('[v0] Item selects:', $('.item-select').length);
      console.log('[v0] Selected count element:', $('#selected-count').length);
      console.log('[v0] Checked order toggles:', $('.checked-order-toggle').length);
      console.log('[v0] Items with checked_order=true:', $('.item-row[data-checked-order="true"]').length);
      console.log('[v0] Items with .selection-checked class:', $('.selection-checked').length);
      
      updateRealSelectionCount();
    }, 100);
  }

  // Inicialização
  initializeSelectionStates();
});
<% end %>

<style>
body {
  background-color: #212529;
  color: #fff;
  padding-bottom: 60px;
}

.fixed-footer {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1030;
  padding: 0;
  background: none;
  border: none;
  box-shadow: none;
}

.footer-nav-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

.footer-nav-section {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 20px;
  border-radius: 30px;
  min-width: 220px;
  background-color: rgba(220, 53, 69, 0.9);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.footer-nav-controls {
  display: flex;
  align-items: center;
  margin-left: 15px;
}

.footer-nav-controls .btn {
  width: 30px;
  height: 30px;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
}

.footer-nav-controls .btn:hover:not(:disabled) {
  background-color: rgba(0, 0, 0, 0.5);
}

.footer-nav-controls .btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.nav-counter {
  margin: 0 10px;
  font-weight: 600;
  color: white;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate(-50%, 20px);
  }
  to {
    opacity: 1;
    transform: translate(-50%, 0);
  }
}

.fixed-footer {
  animation: fadeInUp 0.5s ease-out;
}

@media (max-width: 768px) {
  .footer-nav-section {
    min-width: 180px;
    padding: 8px 15px;
  }
  
  .footer-nav-controls .btn {
    width: 25px;
    height: 25px;
  }
  
  .nav-counter {
    font-size: 0.9rem;
  }
}

.highlighted-row-danger {
  background-color: rgba(220, 53, 69, 0.5) !important;
  transition: background-color 0.3s ease;
  box-shadow: 0 0 10px rgba(220, 53, 69, 0.7);
  border-left: 4px solid #dc3545 !important;
}

@keyframes flash-danger {
  0%, 100% { background-color: rgba(220, 53, 69, 0.5); }
  50% { background-color: rgba(220, 53, 69, 0.8); }
}

.highlighted-row-danger.flash-animation {
  animation: flash-danger 1s ease-in-out;
}

.alert {
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.save-item-btn, .remove-item-btn, .restore-item-btn {
  transition: all 0.3s ease;
}

.save-item-btn:hover, .remove-item-btn:hover, .restore-item-btn:hover {
  transform: scale(1.05);
}

.quantity-order-input:focus {
  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
  border-color: #28a745;
}

.selection-checked {
  background-color: rgba(40, 167, 69, 0.1) !important;
  border-left: 3px solid #28a745;
}

.selection-pending {
  background-color: rgba(255, 193, 7, 0.1) !important;
  border-left: 3px solid #ffc107;
}

.item-ignored {
  background-color: rgba(108, 117, 125, 0.3) !important;
  opacity: 0.7;
  border-left: 3px solid #6c757d;
}

#bulk-actions-bar {
  position: sticky;
  top: 0;
  z-index: 1020;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
}

.form-check-input:indeterminate {
  background-color: #ffc107;
  border-color: #ffc107;
}

/* Estilos para o modal */
.modal-content {
  border: 1px solid #495057;
}

.modal-header {
  background-color: #343a40;
}

.modal-body {
  background-color: #212529;
}

.modal-footer {
  background-color: #343a40;
}

.form-select:focus, .form-control:focus {
  border-color: #0d6efd;
  box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
}

.selection-saved {
  background-color: rgba(40, 167, 69, 0.1) !important;
  border-left: 4px solid #28a745;
}

.selection-pending {
  background-color: rgba(255, 193, 7, 0.1) !important;
  border-left: 4px solid #ffc107;
}
</style>
